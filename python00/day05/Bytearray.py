
# 字符串是不能被修改的。如果修改，也是创建新的内存空间。
s = "zyangsan";
# s[0] = "s";
# print(s)
print("id",id(s))
# 那么问题来了。如果有个大的字符串，内存500M。此时需要一个跟他只差一个字符的字符串,那么还得开辟一块500M的内存
s = s.encode("UTF-8")
# 将字符串转换为bytearray，由于每个字符对应一个ascii码，所以这里通过码表，更改对应的字符
b = bytearray(s)
print(b)
# 122 121 小写的zy分别对应122和121
print(b[0])
print(b[1])
#将第一个字符修改成大写的AB，大写的AB分别对应65和66，所以直接替换byte可以实现更改
b[0] = 65
b[1] = 66


# ABangsan
b = b.decode("UTF-8")
print(b)

# 最后，我们发现我们修改成功了。并且通过id函数查看地址，发现地址也发生了变化。
# 也就是说，我们这里改的是最底层的地址。而不是开辟了新的空间。
print("id",id(s))





